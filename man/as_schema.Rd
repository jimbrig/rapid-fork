% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components-schema.R
\name{as_schema}
\alias{as_schema}
\title{Coerce lists to schemas}
\usage{
as_schema(x, ..., arg = caller_arg(x), call = caller_env())
}
\arguments{
\item{x}{The object to coerce. Must be empty or have names "type",
"nullable", "description", and/or "format", or names that can be coerced to
those names via \code{\link[snakecase:caseconverter]{snakecase::to_snake_case()}}. Extra names are ignored. This
object should describe a single schema.}

\item{...}{These dots are for future extensions and must be empty.}

\item{arg}{An argument name as a string. This argument
will be mentioned in error messages as the input that is at the
origin of a problem.}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[rlang:abort]{abort()}} for more information.}
}
\value{
A \code{schema} as returned by \code{\link[=class_schema]{class_schema()}}.
}
\description{
\code{as_schema()} turns an existing object into a \code{schema}. This is in contrast
with \code{\link[=class_schema]{class_schema()}}, which builds a \code{schema} from individual properties.
}
\examples{
as_schema()
as_schema(
  list(
    type = "string",
    format = "date-time",
    description = "Timestamp when the event will occur."
  )
)
}
