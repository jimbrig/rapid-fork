% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/components.R
\name{as_component_collection}
\alias{as_component_collection}
\title{Coerce lists to component_collection objects}
\usage{
as_component_collection(x, ...)
}
\arguments{
\item{x}{The object to coerce. Must be empty or be a list containing a single
list named "security_schemes", or a name that can be coerced to
"security_schemes" via \code{\link[snakecase:caseconverter]{snakecase::to_snake_case()}}. Additional names are
ignored.}

\item{...}{These dots are for future extensions and must be empty.}
}
\value{
A \code{component_collection} object as returned by
\code{\link[=component_collection]{component_collection()}}.
}
\description{
\code{as_component_collection()} turns an existing object into a
\code{component_collection} object. This is in contrast with
\code{\link[=component_collection]{component_collection()}}, which builds a \code{component_collection} from
individual properties.
}
\examples{
as_component_collection()
as_component_collection(list(
  securitySchemes = list(
    accountAuth = list(
      description = "Account JWT token",
      flows = list(
        password = list(
          scopes = list(
            Catalog = "Access all read-only content",
            Commerce = "Perform account-level transactions",
            Playback = "Allow playback of restricted content",
            Settings = "Modify account settings"
          ),
          tokenUrl = "/account/authorization"
        )
      ),
      type = "oauth2"
    ),
    profileAuth = list(
      description = "Profile JWT token",
      flows = list(
        password = list(
          scopes = list(
            Catalog = "Modify profile preferences and activity (bookmarks, watch list)"
          ),
          tokenUrl = "/account/profile/authorization"
        )
      ),
      type = "oauth2"
    ),
    resetPasswordAuth = list(
      `in` = "header",
      name = "authorization",
      type = "apiKey"
    ),
    verifyEmailAuth = list(
      `in` = "header",
      name = "authorization",
      type = "apiKey"
    )
  )
))
}
