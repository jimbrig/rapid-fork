% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/servers-01-string_replacements.R
\name{string_replacements}
\alias{string_replacements}
\title{A set of variables for server URL template substitution}
\usage{
string_replacements(
  name = class_missing,
  default = class_missing,
  ...,
  enum = class_missing,
  description = S7::class_missing
)
}
\arguments{
\item{name}{Character vector (required). The names of the variables.}

\item{default}{Character vector (required). The default value to use for
substitution of each variable, which \emph{shall} be sent if an alternate value
is not supplied. Note this behavior is different than the Schema Object’s
treatment of default values, because in those cases parameter values are
optional. If the \code{enum} is defined, the value \emph{must} exist in the enum’s
values.}

\item{...}{These dots are for future extensions and must be empty.}

\item{enum}{List of (potentially empty) character vectors (optional). An
enumeration of string values to be used if the substitution options are
from a limited set.}

\item{description}{Character vector (optional). An optional description for
each server variable. \href{https://spec.commonmark.org/}{CommonMark syntax}
\emph{may} be used for rich text representation.}
}
\value{
A \code{string_replacements} S7 object, with fields \code{name}, \code{default},
\code{enum}, and \code{description}.
}
\description{
Server variable properties used for substitution in the server’s URL
template.
}
\examples{
string_replacements(
  "username",
  "demo",
  enum = c("demo", "other"),
  description = "The active user's folder."
)
}
\seealso{
\code{\link[=as_string_replacements]{as_string_replacements()}} for coercing objects to
\code{string_replacements}, and \code{\link[=server_variables]{server_variables()}} for creating collections
of \code{string_replacements}.
}
